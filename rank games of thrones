#include<stdio.h>
#include<string.h>
void merge(char arr[], int l, int m, int r);
void mergeSort(char arr[], int l, int r);
void merge(char arr[], int l, int m, int r) 
{ 
    int i, j, k; 
    int n1 = m - l + 1; 
    int n2 = r - m; 
    int L[n1], R[n2]; 
    for (i = 0; i < n1; i++) 
        L[i] = arr[l + i]; 
    for (j = 0; j < n2; j++) 
        R[j] = arr[m + 1 + j]; 
  
    
    i = 0; 
    j = 0; 
    k = l;
    while (i < n1 && j < n2) { 
        if (L[i] <= R[j]) { 
            arr[k] = L[i]; 
            i++; 
        } 
        else { 
            arr[k] = R[j]; 
            j++; 
        } 
        k++; 
    } 
 
    while (i < n1) { 
        arr[k] = L[i]; 
        i++; 
        k++; 
    } 
 
    while (j < n2) { 
        arr[k] = R[j]; 
        j++; 
        k++; 
    } 
} 
  
void mergeSort(char arr[], int l, int r) 
{ 
    if (l < r) { 
        int m = l + (r - l) / 2; 
        mergeSort(arr, l, m); 
        mergeSort(arr, m + 1, r); 
  
        merge(arr, l, m, r); 
    } 
} 
int main()
{
int i,n,f1=1,flag=0;
char a[100001];
scanf("%s",a);
n=strlen(a);
mergeSort(a,0,n-1);
for(i=0;i<n-1;i++){
if(a[i]==a[i+1])
f1++;
else {
if(f1%2!=0)
{flag++;
if(flag==2)
break;
}
f1=1;
}
}
if(flag==2)
printf("NO");
else 
printf("YES");
    return 0;
}
